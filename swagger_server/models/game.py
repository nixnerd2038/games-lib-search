# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Game(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, title: str=None, genres: List=None, publishers: List=None, year_of_publication: str=None, tags: List=None):  # noqa: E501
        """Game - a model defined in Swagger

        :param title: The title of this Game.  # noqa: E501
        :type title: str
        :param genres: The genres of this Game.  # noqa: E501
        :type genres: List
        :param publishers: The publishers of this Game.  # noqa: E501
        :type publishers: List
        :param year_of_publication: The year_of_publication of this Game.  # noqa: E501
        :type year_of_publication: str
        :param tags: The tags of this Game.  # noqa: E501
        :type tags: List
        """
        self.swagger_types = {
            'title': str,
            'genres': List,
            'publishers': List,
            'year_of_publication': str,
            'tags': List
        }

        self.attribute_map = {
            'title': 'title',
            'genres': 'genres',
            'publishers': 'publishers',
            'year_of_publication': 'yearOfPublication',
            'tags': 'tags'
        }
        self._title = title
        self._genres = genres
        self._publishers = publishers
        self._year_of_publication = year_of_publication
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt) -> 'Game':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The game of this Game.  # noqa: E501
        :rtype: Game
        """
        return util.deserialize_model(dikt, cls)

    @property
    def title(self) -> str:
        """Gets the title of this Game.

        The name of the game  # noqa: E501

        :return: The title of this Game.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this Game.

        The name of the game  # noqa: E501

        :param title: The title of this Game.
        :type title: str
        """

        self._title = title

    @property
    def genres(self) -> List:
        """Gets the genres of this Game.

        The genres to which the game belongs  # noqa: E501

        :return: The genres of this Game.
        :rtype: List
        """
        return self._genres

    @genres.setter
    def genres(self, genres: List):
        """Sets the genres of this Game.

        The genres to which the game belongs  # noqa: E501

        :param genres: The genres of this Game.
        :type genres: List
        """

        self._genres = genres

    @property
    def publishers(self) -> List:
        """Gets the publishers of this Game.

        The name of the publisher(s)  # noqa: E501

        :return: The publishers of this Game.
        :rtype: List
        """
        return self._publishers

    @publishers.setter
    def publishers(self, publishers: List):
        """Sets the publishers of this Game.

        The name of the publisher(s)  # noqa: E501

        :param publishers: The publishers of this Game.
        :type publishers: List
        """

        self._publishers = publishers

    @property
    def year_of_publication(self) -> str:
        """Gets the year_of_publication of this Game.

        The year the game was published  # noqa: E501

        :return: The year_of_publication of this Game.
        :rtype: str
        """
        return self._year_of_publication

    @year_of_publication.setter
    def year_of_publication(self, year_of_publication: str):
        """Sets the year_of_publication of this Game.

        The year the game was published  # noqa: E501

        :param year_of_publication: The year_of_publication of this Game.
        :type year_of_publication: str
        """

        self._year_of_publication = year_of_publication

    @property
    def tags(self) -> List:
        """Gets the tags of this Game.

        Custom tags to add to the record for searching  # noqa: E501

        :return: The tags of this Game.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags: List):
        """Sets the tags of this Game.

        Custom tags to add to the record for searching  # noqa: E501

        :param tags: The tags of this Game.
        :type tags: List
        """

        self._tags = tags
